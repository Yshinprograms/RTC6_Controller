// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: ovf_lut.proto
// Protobuf C++ Version: 5.29.3

#ifndef ovf_5flut_2eproto_2epb_2eh
#define ovf_5flut_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_ovf_5flut_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_ovf_5flut_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_ovf_5flut_2eproto;
namespace open_vector_format {
class JobLUT;
struct JobLUTDefaultTypeInternal;
extern JobLUTDefaultTypeInternal _JobLUT_default_instance_;
class WorkPlaneLUT;
struct WorkPlaneLUTDefaultTypeInternal;
extern WorkPlaneLUTDefaultTypeInternal _WorkPlaneLUT_default_instance_;
}  // namespace open_vector_format
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace open_vector_format {

// ===================================================================


// -------------------------------------------------------------------

class WorkPlaneLUT final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:open_vector_format.WorkPlaneLUT) */ {
 public:
  inline WorkPlaneLUT() : WorkPlaneLUT(nullptr) {}
  ~WorkPlaneLUT() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(WorkPlaneLUT* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(WorkPlaneLUT));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR WorkPlaneLUT(
      ::google::protobuf::internal::ConstantInitialized);

  inline WorkPlaneLUT(const WorkPlaneLUT& from) : WorkPlaneLUT(nullptr, from) {}
  inline WorkPlaneLUT(WorkPlaneLUT&& from) noexcept
      : WorkPlaneLUT(nullptr, std::move(from)) {}
  inline WorkPlaneLUT& operator=(const WorkPlaneLUT& from) {
    CopyFrom(from);
    return *this;
  }
  inline WorkPlaneLUT& operator=(WorkPlaneLUT&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const WorkPlaneLUT& default_instance() {
    return *internal_default_instance();
  }
  static inline const WorkPlaneLUT* internal_default_instance() {
    return reinterpret_cast<const WorkPlaneLUT*>(
        &_WorkPlaneLUT_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(WorkPlaneLUT& a, WorkPlaneLUT& b) { a.Swap(&b); }
  inline void Swap(WorkPlaneLUT* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(WorkPlaneLUT* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  WorkPlaneLUT* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<WorkPlaneLUT>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const WorkPlaneLUT& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const WorkPlaneLUT& from) { WorkPlaneLUT::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(WorkPlaneLUT* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "open_vector_format.WorkPlaneLUT"; }

 protected:
  explicit WorkPlaneLUT(::google::protobuf::Arena* arena);
  WorkPlaneLUT(::google::protobuf::Arena* arena, const WorkPlaneLUT& from);
  WorkPlaneLUT(::google::protobuf::Arena* arena, WorkPlaneLUT&& from) noexcept
      : WorkPlaneLUT(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kVectorBlocksPositionsFieldNumber = 2,
    kWorkPlaneShellPositionFieldNumber = 1,
  };
  // repeated int64 vectorBlocksPositions = 2;
  int vectorblockspositions_size() const;
  private:
  int _internal_vectorblockspositions_size() const;

  public:
  void clear_vectorblockspositions() ;
  ::int64_t vectorblockspositions(int index) const;
  void set_vectorblockspositions(int index, ::int64_t value);
  void add_vectorblockspositions(::int64_t value);
  const ::google::protobuf::RepeatedField<::int64_t>& vectorblockspositions() const;
  ::google::protobuf::RepeatedField<::int64_t>* mutable_vectorblockspositions();

  private:
  const ::google::protobuf::RepeatedField<::int64_t>& _internal_vectorblockspositions() const;
  ::google::protobuf::RepeatedField<::int64_t>* _internal_mutable_vectorblockspositions();

  public:
  // int64 workPlaneShellPosition = 1;
  void clear_workplaneshellposition() ;
  ::int64_t workplaneshellposition() const;
  void set_workplaneshellposition(::int64_t value);

  private:
  ::int64_t _internal_workplaneshellposition() const;
  void _internal_set_workplaneshellposition(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:open_vector_format.WorkPlaneLUT)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const WorkPlaneLUT& from_msg);
    ::google::protobuf::RepeatedField<::int64_t> vectorblockspositions_;
    ::google::protobuf::internal::CachedSize _vectorblockspositions_cached_byte_size_;
    ::int64_t workplaneshellposition_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ovf_5flut_2eproto;
};
// -------------------------------------------------------------------

class JobLUT final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:open_vector_format.JobLUT) */ {
 public:
  inline JobLUT() : JobLUT(nullptr) {}
  ~JobLUT() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(JobLUT* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(JobLUT));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR JobLUT(
      ::google::protobuf::internal::ConstantInitialized);

  inline JobLUT(const JobLUT& from) : JobLUT(nullptr, from) {}
  inline JobLUT(JobLUT&& from) noexcept
      : JobLUT(nullptr, std::move(from)) {}
  inline JobLUT& operator=(const JobLUT& from) {
    CopyFrom(from);
    return *this;
  }
  inline JobLUT& operator=(JobLUT&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const JobLUT& default_instance() {
    return *internal_default_instance();
  }
  static inline const JobLUT* internal_default_instance() {
    return reinterpret_cast<const JobLUT*>(
        &_JobLUT_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(JobLUT& a, JobLUT& b) { a.Swap(&b); }
  inline void Swap(JobLUT* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(JobLUT* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  JobLUT* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<JobLUT>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const JobLUT& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const JobLUT& from) { JobLUT::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(JobLUT* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "open_vector_format.JobLUT"; }

 protected:
  explicit JobLUT(::google::protobuf::Arena* arena);
  JobLUT(::google::protobuf::Arena* arena, const JobLUT& from);
  JobLUT(::google::protobuf::Arena* arena, JobLUT&& from) noexcept
      : JobLUT(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kWorkPlanePositionsFieldNumber = 2,
    kJobShellPositionFieldNumber = 1,
  };
  // repeated int64 workPlanePositions = 2;
  int workplanepositions_size() const;
  private:
  int _internal_workplanepositions_size() const;

  public:
  void clear_workplanepositions() ;
  ::int64_t workplanepositions(int index) const;
  void set_workplanepositions(int index, ::int64_t value);
  void add_workplanepositions(::int64_t value);
  const ::google::protobuf::RepeatedField<::int64_t>& workplanepositions() const;
  ::google::protobuf::RepeatedField<::int64_t>* mutable_workplanepositions();

  private:
  const ::google::protobuf::RepeatedField<::int64_t>& _internal_workplanepositions() const;
  ::google::protobuf::RepeatedField<::int64_t>* _internal_mutable_workplanepositions();

  public:
  // int64 jobShellPosition = 1;
  void clear_jobshellposition() ;
  ::int64_t jobshellposition() const;
  void set_jobshellposition(::int64_t value);

  private:
  ::int64_t _internal_jobshellposition() const;
  void _internal_set_jobshellposition(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:open_vector_format.JobLUT)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const JobLUT& from_msg);
    ::google::protobuf::RepeatedField<::int64_t> workplanepositions_;
    ::google::protobuf::internal::CachedSize _workplanepositions_cached_byte_size_;
    ::int64_t jobshellposition_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ovf_5flut_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// JobLUT

// int64 jobShellPosition = 1;
inline void JobLUT::clear_jobshellposition() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.jobshellposition_ = ::int64_t{0};
}
inline ::int64_t JobLUT::jobshellposition() const {
  // @@protoc_insertion_point(field_get:open_vector_format.JobLUT.jobShellPosition)
  return _internal_jobshellposition();
}
inline void JobLUT::set_jobshellposition(::int64_t value) {
  _internal_set_jobshellposition(value);
  // @@protoc_insertion_point(field_set:open_vector_format.JobLUT.jobShellPosition)
}
inline ::int64_t JobLUT::_internal_jobshellposition() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.jobshellposition_;
}
inline void JobLUT::_internal_set_jobshellposition(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.jobshellposition_ = value;
}

// repeated int64 workPlanePositions = 2;
inline int JobLUT::_internal_workplanepositions_size() const {
  return _internal_workplanepositions().size();
}
inline int JobLUT::workplanepositions_size() const {
  return _internal_workplanepositions_size();
}
inline void JobLUT::clear_workplanepositions() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.workplanepositions_.Clear();
}
inline ::int64_t JobLUT::workplanepositions(int index) const {
  // @@protoc_insertion_point(field_get:open_vector_format.JobLUT.workPlanePositions)
  return _internal_workplanepositions().Get(index);
}
inline void JobLUT::set_workplanepositions(int index, ::int64_t value) {
  _internal_mutable_workplanepositions()->Set(index, value);
  // @@protoc_insertion_point(field_set:open_vector_format.JobLUT.workPlanePositions)
}
inline void JobLUT::add_workplanepositions(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_workplanepositions()->Add(value);
  // @@protoc_insertion_point(field_add:open_vector_format.JobLUT.workPlanePositions)
}
inline const ::google::protobuf::RepeatedField<::int64_t>& JobLUT::workplanepositions() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:open_vector_format.JobLUT.workPlanePositions)
  return _internal_workplanepositions();
}
inline ::google::protobuf::RepeatedField<::int64_t>* JobLUT::mutable_workplanepositions()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:open_vector_format.JobLUT.workPlanePositions)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_workplanepositions();
}
inline const ::google::protobuf::RepeatedField<::int64_t>&
JobLUT::_internal_workplanepositions() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.workplanepositions_;
}
inline ::google::protobuf::RepeatedField<::int64_t>* JobLUT::_internal_mutable_workplanepositions() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.workplanepositions_;
}

// -------------------------------------------------------------------

// WorkPlaneLUT

// int64 workPlaneShellPosition = 1;
inline void WorkPlaneLUT::clear_workplaneshellposition() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.workplaneshellposition_ = ::int64_t{0};
}
inline ::int64_t WorkPlaneLUT::workplaneshellposition() const {
  // @@protoc_insertion_point(field_get:open_vector_format.WorkPlaneLUT.workPlaneShellPosition)
  return _internal_workplaneshellposition();
}
inline void WorkPlaneLUT::set_workplaneshellposition(::int64_t value) {
  _internal_set_workplaneshellposition(value);
  // @@protoc_insertion_point(field_set:open_vector_format.WorkPlaneLUT.workPlaneShellPosition)
}
inline ::int64_t WorkPlaneLUT::_internal_workplaneshellposition() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.workplaneshellposition_;
}
inline void WorkPlaneLUT::_internal_set_workplaneshellposition(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.workplaneshellposition_ = value;
}

// repeated int64 vectorBlocksPositions = 2;
inline int WorkPlaneLUT::_internal_vectorblockspositions_size() const {
  return _internal_vectorblockspositions().size();
}
inline int WorkPlaneLUT::vectorblockspositions_size() const {
  return _internal_vectorblockspositions_size();
}
inline void WorkPlaneLUT::clear_vectorblockspositions() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.vectorblockspositions_.Clear();
}
inline ::int64_t WorkPlaneLUT::vectorblockspositions(int index) const {
  // @@protoc_insertion_point(field_get:open_vector_format.WorkPlaneLUT.vectorBlocksPositions)
  return _internal_vectorblockspositions().Get(index);
}
inline void WorkPlaneLUT::set_vectorblockspositions(int index, ::int64_t value) {
  _internal_mutable_vectorblockspositions()->Set(index, value);
  // @@protoc_insertion_point(field_set:open_vector_format.WorkPlaneLUT.vectorBlocksPositions)
}
inline void WorkPlaneLUT::add_vectorblockspositions(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_vectorblockspositions()->Add(value);
  // @@protoc_insertion_point(field_add:open_vector_format.WorkPlaneLUT.vectorBlocksPositions)
}
inline const ::google::protobuf::RepeatedField<::int64_t>& WorkPlaneLUT::vectorblockspositions() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:open_vector_format.WorkPlaneLUT.vectorBlocksPositions)
  return _internal_vectorblockspositions();
}
inline ::google::protobuf::RepeatedField<::int64_t>* WorkPlaneLUT::mutable_vectorblockspositions()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:open_vector_format.WorkPlaneLUT.vectorBlocksPositions)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_vectorblockspositions();
}
inline const ::google::protobuf::RepeatedField<::int64_t>&
WorkPlaneLUT::_internal_vectorblockspositions() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.vectorblockspositions_;
}
inline ::google::protobuf::RepeatedField<::int64_t>* WorkPlaneLUT::_internal_mutable_vectorblockspositions() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.vectorblockspositions_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace open_vector_format


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // ovf_5flut_2eproto_2epb_2eh
